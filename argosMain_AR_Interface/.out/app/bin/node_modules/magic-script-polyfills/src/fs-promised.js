import './utils2.js';
import { open as open$1, read as read$1, close as close$1, write as write$1 } from './fs-uv.js';

/**
 * Promise and async iterator friendly filesystem APIs.
 */
/** Open a file. */
async function open(path, flags, mode) {
    return new Promise((resolve, reject) => open$1(path, flags, mode, (error, fd) => error ? reject(error) : resolve(fd)));
}
async function close(fd) {
    return new Promise((resolve, reject) => close$1(fd, (error) => error ? reject(error) : resolve()));
}
async function read(fd, buffer, position) {
    return new Promise((resolve, reject) => read$1(fd, buffer, position, (error, bytesRead) => error ? reject(error) : resolve(bytesRead)));
}
function write(fd, buffer, position) {
    return new Promise((resolve, reject) => write$1(fd, buffer, position, (error, bytesWritten) => error ? reject(error) : resolve(bytesWritten)));
}

export { close, open, read, write };
